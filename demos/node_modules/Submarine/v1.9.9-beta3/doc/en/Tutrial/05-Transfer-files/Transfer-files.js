const Submarine=require('Submarine');

const TransferFiles=class extends Submarine {
  fetch(){
    return [{
      a: `${__dirname}/files/a.txt`,
    }, {
      conn: 'ssh',
      host: 'server2',
      files: {
        b: `${__dirname}/files/b.txt`,
        c: `${__dirname}/files/dir`,
      },
   }];
  }

  query(files1, files2){
    return {
      a: String.raw`
        cat ${files1.a}
      `,

      b: String.raw`
        cat ${files2.b}
      `,

      c: String.raw`
        cat ${files2.c}/c.txt
      `,

      fileA: String.raw`,
        echo ${files1.a}
      `,

      fileB: String.raw`
        echo ${files2.b}
      `,

      fileC: String.raw`
        echo ${files2.c}/c.txt
      `,
    };
  }

  test(stats, files1, files2){
    return {
      a: stats.a === 'a', // true
      b: stats.b === 'b', // true
      c: stats.c === 'c', // true
    };
  }

  batch(tests, files1, files2){
    return String.raw`
      cat ${files1.a} ${files2.b} ${files2.c}/c.txt
    `;
  }

}


const transfer=new TransferFiles({
  conn: 'ssh',
  host: 'server1',
});
    

Promise.all([
  transfer.current(),
  transfer.call(),
]).then(console.log).finally(
  none => transfer.close()
);

